ppois
ppois(10, lambda=5*3)
rmean
install.packages("knitr")
install.packages("RWeka")
library("xlsx")
install.packages("ggplot2")
install.packages("lattice")
install.packages("xlsx")
activitydata <- read.csv("activity.csv", stringsAsFactors = FALSE)
activitydata$date <- as.Date(activitydata$date)
setwd("C:\\Users\\markus\\Documents\\R\\RepData_PeerAssessment1")
activitydata <- read.csv("activity.csv", stringsAsFactors = FALSE)
activitydata$date <- as.Date(activitydata$date)
activitydata$timeOfDay <- paste(activitydata$interval %/% 60, ":", activitydata$interval %% 60)
```
sumPerDate <- aggregate(activitydata$steps, list(Date = activitydata$date), FUN=sum, na.rm=TRUE)
meanNoOfStepsPerDay <- mean(sumPerDate$x, na.rm=TRUE)
medianNoOfStepsPerDay <- median(sumPerDate$x, na.rm=TRUE)
meanPerInterval = aggregate(activitydata$steps, list(Interval = activitydata$interval), mean, na.rm=TRUE)
which(is.na(activitydata$steps))
?match
activityDataNoNA <- activitydata
rowsWithNA <- which(is.na(activitydata$steps))
activitydata[rowsWithNA, interval]
activitydata[rowsWithNA, "interval"]
meanPerInterval[, "Interval" == activitydata[rowsWithNA, "interval"]
meanPerInterval[, "Interval" == activitydata[rowsWithNA, "interval"]]
join
?merge
meanPerInterval = aggregate(activitydata$steps, list(interval = activitydata$interval), mean, na.rm=TRUE)
merge(activitydata[rowsWithNA], meanPerInterval)
merge(activitydata[rowsWithNA,], meanPerInterval)
merge(activitydata[rowsWithNA,], meanPerInterval, by.x = interval, by.y = interval)
merge(activitydata[rowsWithNA,], meanPerInterval, by.x = "interval", by.y = "interval")
merge(activitydata[rowsWithNA,], meanPerInterval)
merge(activitydata[rowsWithNA,], meanPerInterval)$steps
merge(activitydata[rowsWithNA,], meanPerInterval)$x
round(merge(activitydata[rowsWithNA,], meanPerInterval)$x)
activityDataNoNA[rowsWithNA, "steps"] <- round(merge(activitydata[rowsWithNA,], meanPerInterval)$x)
View(activityDataNoNA)
Aggregate the number of steps per day, again, this time on the cleaned data set containing no `NA`s, and calculate mean and median again.
sumPerDateNoNA <- aggregate(activityDataNoNA$steps, list(Date = activityDataNoNA$date), FUN=sum)
View(sumPerDateNoNA)
meanNoOfStepsPerDayNoNA <- mean(sumPerDateNoNA$x)
medianNoOfStepsPerDayNoNA <- median(sumPerDateNoNA$x)
activityDataNoNA[rowsWithNA, "steps"] <- round(merge(activitydata[rowsWithNA,], meanPerInterval)$x)
?weekdays
weekdays(actitivydate$date)
weekdays(actitivydata$date)
weekdays(activitydata$date)
vapply(weekdays(actitivydate$date), function (x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday")
))
vapply(weekdays(actitivydate$date), function (x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"))
vapply(weekdays(activitydate$date), function (x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"))
vapply(weekdays(activitydata$date), function (x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"))
vapply(weekdays(activitydata$date), FUN=function (x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"))
vapply(weekdays(activitydata$date), FUN=function (x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE=1)
wd = weekdays(activitydata$date)
vapply
?vapply
sapply(wd, function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"))
wd <- sapply(wd, function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"))
wd = weekdays(activitydata$date)
wdc <- sapply(wd, function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"))
wdc
str(wdc)
wdc[1]
wdc[1,1]
wdc[1]
wdc <- apply(wd, function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"))
wdc <- apply(wd, FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"))
wdc <- vapply(wd, FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"))
wdc <- vapply(wd, FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE="weekday")
wdc
wdc <- vapply(wd, FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE="weekday")
str(wdc)
activitydata <- cbind(activitydata, wdc)
View(activitydata)
``` {r} weekday <- as.factor(vapply(activityDataNoNA, FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE="weekday"))```
``` {r} weekday <- vapply(activityDataNoNA, FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE="weekday")```
``` {r} weekday <- as.factor(vapply(activityDataNoNA$date, FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE="weekday"))```
``` {r} weekday <- vapply(activityDataNoNA, FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE="weekday")```
weekday <- as.factor(vapply(activityDataNoNA$date, FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE="weekday"))
weekday <- vapply(activityDataNoNA$date, FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE="weekday")
table(weekday)
weekday <- vapply(activityDataNoNA$date, FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE="w")
table(weekday)
weekday <- vapply(weekdays(activityDataNoNA$date), FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE="w")
table(weekday)
weekday <- as.factor(vapply(weekdays(activityDataNoNA$date), FUN=function(x) ifelse(x %in% c("Samstag", "Sonntag"), "weekend", "weekday"), FUN.VALUE="w"))
activityDataNoNA <- cbind(activityDataNoNA, weekday)
View(activityDataNoNA)
meanPerIntervalNoNA = aggregate(activitydata$steps, list(interval = activityDataNoNA$interval, weekday=activityDataNoNA$weekday), mean)
View(meanPerIntervalNoNA)
meanPerIntervalNoNA = aggregate(activityDataNoNA$steps, list(interval = activityDataNoNA$interval, weekday=activityDataNoNA$weekday), mean)
View(meanPerIntervalNoNA)
meanPerIntervalNoNA[, weekday=="weekday"]
meanPerIntervalNoNA[, meanPerIntervaNoNA$weekday=="weekday"]
meanPerIntervalNoNA[, meanPerIntervalNoNA$weekday=="weekday"]
meanPerIntervalNoNA[meanPerIntervalNoNA$weekday=="weekday", ]
